image: archlinux/base:latest

stages:
  - prechecks
  - prepare
  - pretests
  - build
  - dkms
  - release
  - deploy

# Warning : the dkms build jobs override this
before_script:
  - pacman-key --init && \
    pacman-key --populate archlinux || true
  - pacman -Sy --noconfirm reflector
  - reflector --verbose --latest 50 --sort rate --save /etc/pacman.d/mirrorlist 
  - pacman -Su --noconfirm

.build_pkg_no_artifact: &buildpkgnoartifact
  script:
    - pacman -S --noconfirm --needed mkinitcpio asp base-devel ccache haveged namcap wget sed dos2unix mercurial grep
    - sed -i 's/#MAKEFLAGS="-j2"/MAKEFLAGS="-j'$(nproc)'"/' /etc/makepkg.conf
    - sed -ri 's/^BUILDENV=(.*)\!ccache(.*)/BUILDENV=\1ccache\2/' /etc/makepkg.conf
    - mkdir -p work/cache/ccache work/output
    - ln -s "$(pwd)"/work /work
    - cp packages_*.lst buildPackages.sh include.sh /work
    - cp -R package /work
    - cp groovy-ux-repo.conf /etc/pacman.d
    - grep -q groovy-ux-repo.conf /etc/pacman.conf || echo -e "\nInclude = /etc/pacman.d/groovy-ux-repo.conf" >> /etc/pacman.conf
    - pacman -Sy
    - pacman -Sl groovyarcade
    - useradd -ms /bin/bash -d /work build
    - echo 'build ALL=(root) NOPASSWD:ALL' > /etc/sudoers.d/user && chmod 0440 /etc/sudoers.d/user
    - chown -R build:build work /work
    - chmod -R 777 work /work
    - CCACHE_DIR=/work/cache/ccache ccache -s
    - su - build -c "cd /work && MAKEPKG_OPTS=\"$MAKEPKG_OPTS\" DONT_DOWNLOAD_JUST_BUILD=\"$DONT_DOWNLOAD_JUST_BUILD\" ./buildPackages.sh $MAKEPKG_ARGS" 2>&1 | tee work/output/build.log
    - CCACHE_DIR=/work/cache/ccache ccache -s
    
.build_packages_template: &buildpackages
  <<: *buildpkgnoartifact
  artifacts:
    paths:
      - work/output
    expire_in: 1 mos

.branches_but_master: &notmaster
  when: manual
  only:
    - branches
  except:
    - master

.only_master: &onlymasterortags
  only:
    - master
    - tags


bash_lint:
  image: koalaman/shellcheck-alpine
  stage: prechecks
  allow_failure: true
  when: always
  before_script:
    - shellcheck -V
  script:
    - shellcheck -x *.sh


build_single_aur:
  stage: pretests
  variables:
    MAKEPKG_ARGS: "-s 'aur/gamemode'"
  <<: *buildpkgnoartifact
  cache:
    key: cache-aur
    paths:
      - work/cache


build_single_native:
  stage: pretests
  variables:
    MAKEPKG_ARGS: "-s kitty"
  <<: *buildpkgnoartifact
  cache:
    key: cache-aur
    paths:
      - work/cache


#basic_checks:
#  stage: prechecks
#  <<: *notmaster
#  variables:
#    MAKEPKG_OPTS: "--nobuild --nodeps"
#  <<: *buildpackages
#  when: always


reset_releases:
  stage: prepare
  image: alpine
  before_script:
    - echo "Resetting draft releases"
  script:
    - apk add curl
    - curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 | tar -jx --strip-components 3 -C /usr/local/bin bin/linux/amd64/github-release
    - github-release edit -t testing -p
    - github-release edit -t stable


build:linux:dev:
  stage: build
  <<: *notmaster
  variables:
    MAKEPKG_ARGS: "linux"
  <<: *buildpackages
  cache:
    key: cache-linux
    paths:
      - work/cache
  tags:
    - longOps


build:groovymame:dev:
  stage: build
  <<: *notmaster
  variables:
    MAKEPKG_ARGS: "mame"
  <<: *buildpackages
  cache:
    key: cache-mame
    paths:
      - work/cache
  tags:
    - longOps


build:aur:dev:
  stage: build
  <<: *notmaster
  variables:
    MAKEPKG_ARGS: "-a"
  <<: *buildpackages
  cache:
    key: cache-aur
    paths:
      - work/cache


build:groovy:dev:
  stage: build
  <<: *notmaster
  variables:
    MAKEPKG_ARGS: "-g"
  <<: *buildpackages
  cache:
    key: cache-groovy
    paths:
      - work/cache


dkms:native:dev:
  stage: dkms
  dependencies:
    - build:linux:dev
  before_script:
    - pacman-key --init && \
      pacman-key --populate archlinux || true
    - pacman -Sy --noconfirm reflector
    - reflector --verbose --latest 50 --sort rate --save /etc/pacman.d/mirrorlist 
    - pacman -Su --noconfirm
    - pacman -U --noconfirm work/output/linux-15khz-*
  <<: *buildpackages
  <<: *notmaster
  variables:
    MAKEPKG_ARGS: "-n"
    DONT_DOWNLOAD_JUST_BUILD: "1"
  cache:
    key: cache-aur
    paths:
      - work/cache


build:linux:
  stage: build
  <<: *onlymasterortags
  variables:
    MAKEPKG_ARGS: "linux"
  <<: *buildpackages
  cache:
    key: cache-linux
    paths:
      - work/cache
  tags:
    - longOps


build:groovymame:
  stage: build
  <<: *onlymasterortags
  variables:
    MAKEPKG_ARGS: "mame"
  <<: *buildpackages
  cache:
    key: cache-mame
    paths:
      - work/cache
  tags:
    - longOps


build:aur:
  stage: build
  <<: *onlymasterortags
  variables:
    MAKEPKG_ARGS: "-a"
  <<: *buildpackages
  cache:
    key: cache-aur
    paths:
      - work/cache


# allow_failure: true to allow pushing the kernel even if broadcom-wl failed
dkms:native:
  stage: dkms
  dependencies:
    - build:linux
  before_script:
    - pacman-key --init && \
      pacman-key --populate archlinux || true
    - pacman -Sy --noconfirm reflector
    - reflector --verbose --latest 50 --sort rate --save /etc/pacman.d/mirrorlist 
    - pacman -Su --noconfirm
    - pacman -U --noconfirm work/output/linux-15khz-*
  <<: *onlymasterortags
  variables:
    MAKEPKG_ARGS: "-n"
    DONT_DOWNLOAD_JUST_BUILD: 1
  <<: *buildpackages
  cache:
    key: cache-aur
    paths:
      - work/cache


build:groovy:
  stage: build
  <<: *onlymasterortags
  variables:
    MAKEPKG_ARGS: "-g"
  <<: *buildpackages
  cache:
    key: cache-aur
    paths:
      - work/cache


release:testing:
  stage: release
  <<: *onlymasterortags
  script:
    - echo "Releasing testing packages"
    - pacman -Sy --noconfirm --needed tar xz grep
    - curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 | tar -jx --strip-components 3 -C /usr/local/bin bin/linux/amd64/github-release
    - ./release.sh -t


deploy:stable:
  stage: deploy
  when: manual
  dependencies:
    - release:testing
  <<: *onlymasterortags
  script:
    - echo "Releasing stable packages"
    - pacman -Sy --noconfirm --needed tar xz grep
    - curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 | tar -jx --strip-components 3 -C /usr/local/bin bin/linux/amd64/github-release
    - BUILD_TYPE=stable ./release.sh -dcrup


release:testing:dev:
  stage: release
  script:
    - echo "Releasing unstable packages"
    - pacman -Sy --noconfirm --needed tar xz grep
    - curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 | tar -jx --strip-components 3 -C /usr/local/bin bin/linux/amd64/github-release
    - ./release.sh -n "$CI_COMMIT_REF_SLUG" -dcrup
  environment:
    name: testing/$CI_COMMIT_REF_SLUG
    url: https://github.com/substring/packages/releases/tag/$CI_COMMIT_REF_SLUG
    on_stop: release:clean
  <<: *notmaster


release:clean:
  image: alpine
  stage: release
  dependencies: []
  <<: *notmaster
  before_script:
    - echo "Deleting deployment $CI_COMMIT_REF_SLUG"
  script:
    - apk add curl
    - curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 | tar -jx --strip-components 3 -C /usr/local/bin bin/linux/amd64/github-release
    - github-release delete -t "$CI_COMMIT_REF_SLUG"
  environment:
    name: testing/$CI_COMMIT_REF_SLUG
    action: stop
